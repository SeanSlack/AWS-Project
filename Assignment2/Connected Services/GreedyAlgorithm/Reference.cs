//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Assignment2.GreedyAlgorithm {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="GreedyAlgorithm.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAllocationsGreedy", ReplyAction="http://tempuri.org/IService/GetAllocationsGreedyResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WCFSLibrary.TimeoutFault), Action="http://tempuri.org/IService/GetAllocationsGreedyTimeoutFaultFault", Name="TimeoutFault", Namespace="http://schemas.datacontract.org/2004/07/WCFSLibrary")]
        WCFSLibrary.AllocationData GetAllocationsGreedy(int deadline, WCFSLibrary.ConfigData cd, int ID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/GetAllocationsGreedy", ReplyAction="http://tempuri.org/IService/GetAllocationsGreedyResponse")]
        System.IAsyncResult BeginGetAllocationsGreedy(int deadline, WCFSLibrary.ConfigData cd, int ID, System.AsyncCallback callback, object asyncState);
        
        WCFSLibrary.AllocationData EndGetAllocationsGreedy(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : Assignment2.GreedyAlgorithm.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllocationsGreedyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllocationsGreedyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public WCFSLibrary.AllocationData Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((WCFSLibrary.AllocationData)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<Assignment2.GreedyAlgorithm.IService>, Assignment2.GreedyAlgorithm.IService {
        
        private BeginOperationDelegate onBeginGetAllocationsGreedyDelegate;
        
        private EndOperationDelegate onEndGetAllocationsGreedyDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllocationsGreedyCompletedDelegate;
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetAllocationsGreedyCompletedEventArgs> GetAllocationsGreedyCompleted;
        
        public WCFSLibrary.AllocationData GetAllocationsGreedy(int deadline, WCFSLibrary.ConfigData cd, int ID) {
            return base.Channel.GetAllocationsGreedy(deadline, cd, ID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllocationsGreedy(int deadline, WCFSLibrary.ConfigData cd, int ID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllocationsGreedy(deadline, cd, ID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public WCFSLibrary.AllocationData EndGetAllocationsGreedy(System.IAsyncResult result) {
            return base.Channel.EndGetAllocationsGreedy(result);
        }
        
        private System.IAsyncResult OnBeginGetAllocationsGreedy(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int deadline = ((int)(inValues[0]));
            WCFSLibrary.ConfigData cd = ((WCFSLibrary.ConfigData)(inValues[1]));
            int ID = ((int)(inValues[2]));
            return this.BeginGetAllocationsGreedy(deadline, cd, ID, callback, asyncState);
        }
        
        private object[] OnEndGetAllocationsGreedy(System.IAsyncResult result) {
            WCFSLibrary.AllocationData retVal = this.EndGetAllocationsGreedy(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllocationsGreedyCompleted(object state) {
            if ((this.GetAllocationsGreedyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllocationsGreedyCompleted(this, new GetAllocationsGreedyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllocationsGreedyAsync(int deadline, WCFSLibrary.ConfigData cd, int ID) {
            this.GetAllocationsGreedyAsync(deadline, cd, ID, null);
        }
        
        public void GetAllocationsGreedyAsync(int deadline, WCFSLibrary.ConfigData cd, int ID, object userState) {
            if ((this.onBeginGetAllocationsGreedyDelegate == null)) {
                this.onBeginGetAllocationsGreedyDelegate = new BeginOperationDelegate(this.OnBeginGetAllocationsGreedy);
            }
            if ((this.onEndGetAllocationsGreedyDelegate == null)) {
                this.onEndGetAllocationsGreedyDelegate = new EndOperationDelegate(this.OnEndGetAllocationsGreedy);
            }
            if ((this.onGetAllocationsGreedyCompletedDelegate == null)) {
                this.onGetAllocationsGreedyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllocationsGreedyCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllocationsGreedyDelegate, new object[] {
                        deadline,
                        cd,
                        ID}, this.onEndGetAllocationsGreedyDelegate, this.onGetAllocationsGreedyCompletedDelegate, userState);
        }
    }
}
